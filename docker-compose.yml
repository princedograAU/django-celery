version: '3'

services:
  gateway:
    build:
      context: .
    command: /bin/sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#    volumes:
#      - ./server:/usr/src/app/
    ports:
      - "8000:8000" # sets the port that maps to internal port in docker container
    environment:
      - DEBUG=1
      - SECRET_KEY=FAKEKEY
      - ALLOWED_HOSTS=localhost,127.0.0.1 [::1]
      - CELERY_BROKER_URL=amqp://localhost
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_URL=postgres://postgres:postgres@database:5432/backend
    depends_on:
      - database
      - rabbitmq

#  celery:
#    build: ./server
#    command: celery worker --app=core --loglevel=info --logfile=logs/celery.log # Command used to start the Celery worker in the Docker container
#    volumes:
#      - ./server:/usr/src/app
#    environment:
#      - DEBUG=1
#      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
#      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
#      - CELERY_BROKER_URL=amqp://localhost
#      # depends on show that celery worker service requires the web service and the redis service to run
#    depends_on:
#      - web
#      - rabbitmq

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672:5672"

  database:
    image: postgres:14.2-alpine
    environment:
      - POSTGRES_DB=backend
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
